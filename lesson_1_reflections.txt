How did viewing a diff between two versions of a file help you see the bug that was introduced?

	Viewing the diff will show you what is different between two versions of the same file.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

	Easy access to previous versions if you change something. You can save a working version and if it breaks in the future, revert back without issue.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

	Pros are that it is easier to logically distinguish between commits. Con is that you may not commit enough or forget to.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

	Google docs files will not be interconnected while things stored inside of Git may share dependencies

How can you use the commands git log and git diff to view the history of files?

	You can use Git Log to get the commit hash message for all the commits and then use git diff between two of those to see the differences that exist between them

How might using version control make you more confident to make changes that could break something?

	You can make any changes as long as there are commits from when the code was working. You just revert back to the working code.

Now that you have your workspace set up, what do you want to try using Git for?

	Version controlling automation code used for QA testing.

